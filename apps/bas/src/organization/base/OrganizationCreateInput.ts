/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  IsInt,
  ValidateNested,
  IsDate,
} from "class-validator";
import { DiamondPriceWhereUniqueInput } from "../../diamondPrice/base/DiamondPriceWhereUniqueInput";
import { Type } from "class-transformer";
import { OperatorCreateNestedManyWithoutOrganizationsInput } from "./OperatorCreateNestedManyWithoutOrganizationsInput";
import { OrderCreateNestedManyWithoutOrganizationsInput } from "./OrderCreateNestedManyWithoutOrganizationsInput";

@InputType()
class OrganizationCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  bigoId?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  confirmState!: boolean;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  diamondCount!: number;

  @ApiProperty({
    required: true,
    type: () => DiamondPriceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DiamondPriceWhereUniqueInput)
  @Field(() => DiamondPriceWhereUniqueInput)
  diamondPrice!: DiamondPriceWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isSendSms!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  lastestToken!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => OperatorCreateNestedManyWithoutOrganizationsInput,
  })
  @ValidateNested()
  @Type(() => OperatorCreateNestedManyWithoutOrganizationsInput)
  @IsOptional()
  @Field(() => OperatorCreateNestedManyWithoutOrganizationsInput, {
    nullable: true,
  })
  operators?: OperatorCreateNestedManyWithoutOrganizationsInput;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutOrganizationsInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutOrganizationsInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutOrganizationsInput, {
    nullable: true,
  })
  orders?: OrderCreateNestedManyWithoutOrganizationsInput;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { OrganizationCreateInput as OrganizationCreateInput };
